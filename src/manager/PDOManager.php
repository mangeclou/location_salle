<?php
/**
 * 
 * Code skeleton generated by dia-uml2php5 plugin
 * written by KDO kdo@zpmag.com
 */
namespace manager;
class PDOManager {
	private static $instance = null; // pour vérifier si la classe a déja été instanciée ou non 
	protected $pdo; // contiendra l'instance PDO
//--------
	private function __construct() {}
	private function __clone() {}
//--------	
	static public function getInstance()
	{
		if(is_null(self::$instance))
			self::$instance = new self; // on stocke une instanciation de PDOManager dans $instance une seule fois (lors de la première instance)
		return self::$instance; // dans tous les cas je retourne $instance
	}
//--------
	public function getPdo()
	{
		include __DIR__ . '/../../config/Config.php'; // fichier config.php qui contient nos infos de connexion à la BDD
		$config = new \Config(); // j'utilise le backslash pour retourner dans l'espace global 
		$connect = $config->getParametersConnect(); // méthode de la classe Config 
		try
		{
			$this->pdo = new \PDO("mysql:dbname=" . $connect['dbname'] . ";host=" . $connect['host'].";charset=" .$connect['charset'], $connect['user'], $connect['password'], array(\PDO::ATTR_ERRMODE=>\PDO::ERRMODE_EXCEPTION)); // j'utilise le backslash pour aller chercher PDO dans l'espace global 
		}
		catch(\PDOException $e)
		{
			echo 'Connexion échouée : ' . $e->getMessage();
		}
		return $this->pdo;
	}
}