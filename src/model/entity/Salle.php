<?php
/**
 * Contient tous les champs de toutes les tables de la base de donnée
 * Code skeleton generated by dia-uml2php5 plugin
 * written by KDO kdo@zpmag.com
 */
namespace entity; // toujours le même nom que le dossier, pour que l'autoload puisse trouver le fichier
USE repository\SalleRepository;
class Salle {

	/**
	 * 
	 * @var integer
	 * @access protected
	 */
	protected  $idSalle;

	/**
	 * 
	 * @var string
	 * @access protected
	 */
	protected  $pays;

	/**
	 * 
	 * @var string
	 * @access protected
	 */
	protected  $ville;

        /**
	 * 
	 * @var string
	 * @access protected
	 */
	protected  $adresse;
	
	/**
	 * 
	 * @var integer
	 * @access protected
	 */
	protected  $cp;

	/**
	 * 
	 * @var string
	 * @access protected
	 */
	protected  $titre;
        
	/**
	 * 
	 * @var string
	 * @access protected
	 */
	protected  $description;
        
        /**
	 * 
	 * @var string
	 * @access protected
	 */
	protected  $photo;
        
	/**
	 * 
	 * @var integer
	 * @access protected
	 */
	protected  $capacite;

	

	/**
	 * 
	 * @var string
	 * @access protected
	 */
	protected  $categorie;

    
    //----------- GETTERS -----------------
    public function getIdSalle()
    {
         return $this->idSalle;
    }
    public function getPays()
    {
         return $this->pays;
    }
    public function getVille()
    {
        return $this->ville;
    }
    public function getAdresse()
    {
        return $this->adresse;
    }
    public function getCp()
    {
        return $this->cp;
    }
    public function getTitre()
    {
        return $this->titre;
    }
    public function getDescription()
    {
        return $this->description;
    }
    public function getCapacite()
    {
        return $this->capacite;
    }        
    public function getCategorie()
    {
        return $this->categorie;
    }
    //--------- SETTERS ------------------
     public function setPays($pays)
    {
        /**
        * Filtre des inputs de formulaire.
        * On teste si l'input est non vide et si c'est un string bien formatté
        * 
        */
        //if((filter_has_var(INPUT_POST, $pays))&&(filter_input(INPUT_POST, $pays, FILTER_SANITIZE_STRING)) === true) {
        //$this->pays = $pays;
        //}
         if(is_string($pays)) {
            $this->nom = $pays;
        }
    }
     
    public function setVille($ville)
    {
        /**
        * Filtre des inputs de formulaire.
        * On teste si l'input est non vide et si c'est un string bien formatté
        * 
        */
        if(is_string($ville)) {
            $this->ville = $ville;
        }
    }
     
    public function setAdresse($adresse)
    {
        if(is_string($adresse)) {
            $this->adresse = $adresse;
        }
    }
     
    public function setCp($cp)
    {
        if(is_int($cp)) {
            $this->cp = $cp;
        }
    }
     
    public function setTitre($titre)
    {
        if(is_string($titre)) {
            $this->titre = $titre;
        }
    }
     
    public function setDescription($description)
    {
        if(is_string($description)) {
            $this->description = $description;
        }
    }
     
    public function setCapacite($capacite)
    {
        if(is_int($capacite)) {
            $this->capacite = $capacite;
        }
    }
     
    public function setCategorie($categorie)
    {
        if(is_string($categorie)) {
            $this->nom = $categorie;
        }
    }
}